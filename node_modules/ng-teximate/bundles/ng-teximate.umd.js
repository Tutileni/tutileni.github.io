!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs/Observable"),require("rxjs/Subject"),require("rxjs/add/operator/map"),require("rxjs/add/operator/do"),require("rxjs/add/operator/mergeAll"),require("rxjs/add/operator/mergeMap"),require("rxjs/add/operator/delay"),require("rxjs/add/operator/switchMap"),require("rxjs/add/operator/takeWhile"),require("rxjs/add/operator/catch"),require("rxjs/add/observable/from"),require("rxjs/add/observable/of"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","rxjs/Observable","rxjs/Subject","rxjs/add/operator/map","rxjs/add/operator/do","rxjs/add/operator/mergeAll","rxjs/add/operator/mergeMap","rxjs/add/operator/delay","rxjs/add/operator/switchMap","rxjs/add/operator/takeWhile","rxjs/add/operator/catch","rxjs/add/observable/from","rxjs/add/observable/of","@angular/common"],t):t(e.ngTeximate=e.ngTeximate||{},e.ng.core,e.Rx,e.Rx,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable,e.Rx.Observable,e.ng.common)}(this,function(e,t,r,o,n,a,i,s,l,u,d,p,c,f,m){"use strict";var b,h={SEQUENCE:"SEQUENCE",REVERSE:"REVERSE",SYNC:"SYNC",SHUFFLE:"SHUFFLE"};!function(e){e.shuffle=function(e){for(var t,r,o=e.length;o;)r=Math.floor(Math.random()*o--),t=e[o],e[o]=e[r],e[r]=t;return e},e.processWord=function(e,t,r,o){var n,a;switch(e.word.type){case h.SYNC:n=r,a=0;break;case h.REVERSE:n=t.length-r-1,a=o*e.letter.delay+n*e.word.delay;break;default:n=r,a=o*e.letter.delay+r*e.word.delay}return{letters:t[n].letters,delay:a}},e.processLetter=function(e,t,r){var o,n;switch(e.letter.type){case h.SYNC:o=r,n=0;break;case h.REVERSE:o=t.length-r-1,n=r*e.letter.delay;break;default:o=r,n=r*e.letter.delay}return{item:t[o],delay:n}}}(b||(b={}));var y=function(){function e(){var e=this;this.arr=[],this.worker=new o.Subject,this.text=new o.Subject,this.worker.takeWhile(function(){return!e.text.closed}).switchMap(function(t){return"letter"===t.options.type?e.lettersJob(t.options):e.wordsJob(t.options)}).catch(function(e){return console.log("[Teximate]:",e),r.Observable.of(null)}).subscribe()}return e.prototype.createEffect=function(e,t,r){this.arr=this.textFactory(e,t,r),this.worker.next({options:t,hover:r})},e.prototype.runEffect=function(e){this.worker.next({options:e})},e.prototype.lettersJob=function(e){var t=this;return r.Observable.from(this.arr).mergeMap(function(o){var n=0,a=e.word.type===h.SHUFFLE?b.shuffle(o.words.slice(0)):o.words;return r.Observable.of(a).mergeAll().mergeMap(function(o,i){var s=b.processWord(e,a,i,n);n+=s.letters.length;var l;return l=e.letter.type===h.SHUFFLE?b.shuffle(s.letters.slice()):s.letters,r.Observable.of(l).delay(s.delay).mergeAll().mergeMap(function(o,n){var a=b.processLetter(e,l,n);return r.Observable.of(a.item).delay(a.delay).do(function(r){return t.updateItem(r,e)})})})})},e.prototype.wordsJob=function(e){var t=this;return r.Observable.from(this.arr).mergeMap(function(o,n){var a=e.word.type===h.SHUFFLE?b.shuffle(o.words.slice(0)):o.words;return r.Observable.of(a).mergeAll().mergeMap(function(o,n){var i=b.processWord(e,a,n,0);return r.Observable.of(i).delay(i.delay).do(function(){return t.updateItem(o,e)})})})},e.prototype.updateItem=function(e,t){e.visibility="visible",e.animateClass=" animated "+t.animation.name,this.text.next(this.arr)},e.prototype.setItemHover=function(e,t,r){var o=this;return function(){e.animateClass=" animated "+(r.in?r.in:""),setTimeout(function(){e.animateClass=" animated "+(r.out?r.out:""),o.text.next(o.arr)},t.animation.duration)}},e.prototype.textFactory=function(e,t,r){var o=this,n=[];return e.split("\n").map(function(e,a){var i=[];e.split(" ").filter(function(e){return""!==e}).map(function(e,n){var a=[];e.split(/(?!$)/u).map(function(e,n){var i={text:e,class:" letter"+(n+1),animateClass:" animated ",visibility:"word"===t.type?"visible":"hidden",hover:function(){}};"letter"===r.type&&(i.hover=o.setItemHover(i,t,r)),a.push(i)});var s={letters:a,class:" word"+(n+1),animateClass:" animated ",visibility:"hidden",hover:function(){}};"word"===r.type&&(s.hover=o.setItemHover(s,t,r)),i.push(s)}),n.push({words:i,class:" line"+(a+1),visibility:"hidden"})}),n},e}();y.decorators=[{type:t.Injectable}],y.ctorParameters=function(){return[]};var v=function(){function e(e,t,r){this.teximate=e,this.renderer=t,this.jobText="Teximate is working",this.jobHover={type:"off",in:void 0,out:void 0},this.jobEffect={type:"letter",animation:{name:"fadeIn",duration:300},word:{type:h.SEQUENCE,delay:100},letter:{type:h.SHUFFLE,delay:50}},this.style=this.renderer.createElement("style"),this.renderer.appendChild(r.nativeElement,this.style)}return e.prototype.ngOnChanges=function(e){var t=e.text&&e.text.firstChange;e.text&&e.text.currentValue&&(this.jobText=e.text.currentValue,t=!0),e.hover&&e.hover.currentValue&&(this.jobHover=Object.assign({},this.jobEffect,e.hover.currentValue),t=!0),e.effect&&(this.jobEffect=Object.assign({},this.jobEffect,e.effect.currentValue),this.setAnimationDuration(e.effect.currentValue.animation.duration),e.effect.firstChange||e.effect.previousValue.type===e.effect.currentValue.type||(t=!0)),t?this.teximate.createEffect(this.jobText,this.jobEffect,this.jobHover):this.teximate.runEffect(this.jobEffect)},e.prototype.runEffect=function(e){this.teximate.runEffect(e)},e.prototype.setAnimationDuration=function(e){this.renderer.setProperty(this.style,"innerHTML","\n      .animated {\n        animation-duration: "+e+"ms;\n        -webkit-animation-duration: "+e+"ms;\n        -moz-animation-duration: "+e+"ms;\n        -o-animation-duration: "+e+"ms;\n        -ms-animation-duration: "+e+"ms;\n      }\n    ")},e.prototype.ngOnDestroy=function(){this.teximate.text.unsubscribe(),this.teximate.worker.unsubscribe()},e}();v.decorators=[{type:t.Component,args:[{selector:"teximate",template:'\n    <span aria-label="text">\n\n      <p *ngFor="let line of teximate.text | async" [class]="\'line\' + line.class" [style.visibility]="line.visibility">\n\n        <span *ngFor="let word of line.words" [class]="\'word\' + word.class + word.animateClass"\n         [style.visibility]="word.visibility" (mouseover)="word.hover()">\n\n          <span *ngFor="let letter of word.letters" [class]="\'letter\' + letter.class + letter.animateClass"\n           [style.visibility]="letter.visibility" (mouseover)="letter.hover()">\n            {{letter.text}}\n          </span>\n\n        </span>\n      </p>\n\n    </span>\n  ',styles:["\n    .letter,.word{display:inline-block;transform:translateZ(0);-moz-transform:translateZ(0);-o-transform:translateZ(0);-webkit-transform:translateZ(0)}.word{margin-right:8px}\n  "],changeDetection:t.ChangeDetectionStrategy.OnPush,viewProviders:[y]}]}],v.ctorParameters=function(){return[{type:y},{type:t.Renderer2},{type:t.ElementRef}]},v.propDecorators={text:[{type:t.Input}],hover:[{type:t.Input}],effect:[{type:t.Input}]};var x=function(){function e(){}return e}();x.decorators=[{type:t.NgModule,args:[{imports:[m.CommonModule],providers:[y],declarations:[v],exports:[v]}]}],x.ctorParameters=function(){return[]},e.TeximateModule=x,e.TeximateComponent=v,e.TeximateOrder=h,Object.defineProperty(e,"__esModule",{value:!0})});
